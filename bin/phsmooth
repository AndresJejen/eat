#!/usr/bin/env python

import sys
import os
import argparse

import pandas as pd
import numpy  as np

def unwrap(phi):
    for i in range(len(phi)-1):
        dphi = phi[i+1] - phi[i]
        if dphi > 180:
            phi[i+1:] -= 360
        elif dphi < -180:
            phi[i+1:] += 360
    return phi

def qextra(y1, y2, y3):
    a  =       y1
    b  = (-3.0*y1 + 4.0*y2 - y3) / 2.0
    c  = (     y1 - 2.0*y2 + y3) / 2.0
    return a + 3.0*b + 9.0*c

# Argument parsing
parser = argparse.ArgumentParser(description="Smooth phase-cal phases")
parser.add_argument('-f', dest='file', default=None,
                    help="input file")
parser.add_argument('-p', dest='pout', default=None,
                    help="smoothed phase-cal phases")
parser.add_argument('-d', dest='dout', default=None,
                    help="slope, i.e., delay offset, within each channel")
parser.add_argument('-c', dest='cout', default=None,
                    help="fourfit control file")
parser.add_argument('-g', dest='gout', default=None,
                    help="graphic output to show the smoothing")
args = parser.parse_args()

# Read args.file or stdin to a Pandas DataFrame
df = pd.read_table(sys.stdin if args.file is None else args.file,
                   header=None, sep='\s+')

# Quadratic extrapolation to the last channel
for i, r in df.iterrows():
    uw = unwrap(r.values[1:])
    uw[-1] = qextra(uw[-4], uw[-3], uw[-2])
    df.iloc[i,1:] = uw

# Write phase-cal phases to args.pout or stdout
df.to_csv(sys.stdout if args.pout is None else args.pout,
          index=False, header=False, sep=" ", float_format="%.9g")

# TODO: Use mid-point method to estimate derivatives

# TODO: write delay offsets to args.dout
if args.dout is not None:
    raise ValueError("The option \"-d\" is not implemented")

# TODO: write HOPS control file to args.cout
if args.cout is not None:
    raise ValueError("The option \"-c\" is not implemented")

# TODO: plot the smoothing to args.gout
if args.gout is not None:
    raise ValueError("The option \"-g\" is not implemented")
